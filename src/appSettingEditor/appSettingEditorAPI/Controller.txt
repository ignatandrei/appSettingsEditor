//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:{{ RuntimeVersion }}
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Runtime.Serialization;
using Microsoft.Extensions.Configuration;
using RoslynSettingEditor;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using System.Linq;
using System.Threading.Tasks;

namespace {{ NamespaceName }}.Controllers
{
    //[global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("{{ ToolName }}", "{{ ToolVersion }}")]    
    [Route("api/[controller]")]
    [ApiController]
    public partial class {{ appSettingsClass.ClassName }}Controller  
    {
        partial void BeforeGet( {{ appSettingsClass.ClassName }} data );
        partial void BeforeSave( {{ appSettingsClass.ClassName }} data , {{ appSettingsClass.ClassName }} original);

        private {{ appSettingsClass.ClassName }} LoadFromConfig(IConfiguration config){
            var settings  = new {{ appSettingsClass.ClassName }}();
            settings = settings.LoadFromConfig(config);                        
            return settings;
        }
        
        private {{ appSettingsClass.ClassName }} LoadFromFile(string fileName){
            var cnt= System.IO.File.ReadAllText(fileName);
            var settings = System.Text.Json.JsonSerializer.Deserialize<{{appSettingsClass.ClassName}}>(cnt);
            return settings;
        }
                 

        [HttpGet]
        public {{ appSettingsClass.ClassName }} Get([FromServices]IConfiguration config, bool FromFile=true){
            {{ appSettingsClass.ClassName }} settings = null;
            if(FromFile)
                settings=LoadFromFile("{{fullNameFile}}.json");
            else
                settings=LoadFromConfig(config);
            BeforeGet(settings);
            return settings;
        }
        //maybe have a get with the settings name, if there are more than 1?
        [HttpPost()]
        public bool Post([FromServices]IConfiguration config, {{ appSettingsClass.ClassName }}  saveData){
            
            BeforeSave(saveData, LoadFromConfig(config));
            var data = System.Text.Json.JsonSerializer.Serialize(saveData, new System.Text.Json.JsonSerializerOptions()
                {
                    WriteIndented = true
                }) ;
            System.IO.File.WriteAllText("{{fullNameFile}}.json",data);
            return true;
        }
    }

}
